# utils/file_utils.py

import os
import re
from pathlib import Path

def ensure_directory_exists(directory_path: Path):
    """Ensure the given directory exists; create it if necessary."""
    try:
        directory_path.mkdir(parents=True, exist_ok=True)
    except Exception as e:
        print(f"An error occurred while creating directory '{directory_path}': {e}")

def construct_folder_path(base_path: Path, *sub_paths) -> Path | None:
    """
    Construct a folder path by joining base_path with sub_paths.
    Ensures the folder exists.
    Returns the Path object or None if error.
    """
    try:
        folder_path = base_path.joinpath(*sub_paths)
        ensure_directory_exists(folder_path)
        return folder_path
    except Exception as e:
        print(f"An error occurred while constructing folder path: {e}")
        return None

def sanitize_filename(filename: str) -> str:
    """
    Sanitize filename by replacing invalid characters with underscores.
    Invalid chars include: <>:"/\|?* and control chars.
    """
    return re.sub(r'[<>:"/\\|?*\x00-\x1F]', '_', filename)


# --------------------------
# Exemplo de uso
if __name__ == '__main__':

    # Gerar nome de arquivo sanitizado
    bad_name = 'relat√≥rio: junho/2025?.md'
    safe_name = sanitize_filename(bad_name)
    print(f"Sanitized filename: {safe_name}")

    # Exemplo de salvar arquivo vazio
    file_path = safe_name
    file_path.write_text("# Example Markdown\n\nGenerated by script.\n", encoding='utf-8')
    print(f"File created at: {file_path}")
